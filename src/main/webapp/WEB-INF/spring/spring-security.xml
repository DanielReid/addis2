<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
    	<!-- Adding the openid-login tag activates Spring Security's support for OpenID  -->
		<openid-login
			authentication-failure-handler-ref="openIdAuthenticationFailureHandler"
    		login-page="/auth/login"
    		authentication-failure-url="/auth/login?error=1"
    		default-target-url="/"/>
    		
        <logout
            invalidate-session="true"
    		logout-success-url="/auth/login"
        	logout-url="/auth/logout"/>
        
        <!-- Configure these elements to secure URIs in your application -->
        <!-- 
        <intercept-url pattern="/choices/**" access="hasRole('ROLE_ADMIN')"/>
 		-->
 		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
 		<intercept-url pattern="/auth/**" access="permitAll" />
 		<intercept-url pattern="/**" access="isAuthenticated()" />
    </http>

	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<authentication-manager>
        <authentication-provider user-service-ref="openIdUserDetailsService" />
	</authentication-manager>
	
	<context:component-scan base-package="org.drugis.addis2.auth" />
</beans:beans>